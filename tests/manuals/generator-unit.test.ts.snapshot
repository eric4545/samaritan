exports[`Manual Generator Unit Tests > should generate proper table format for multi-environment operations 1`] = `
"# Manual for: Deploy Web Server (v1.1.0)\\n\\n_Deploys the main web server application to staging and production environments._\\n\\n## Environments Overview\\n\\n| Environment | Description | Variables | Targets | Approval Required |\\n| ----------- | ----------- | --------- | ------- | ----------------- |\\n| staging | Staging environment for testing | REPLICAS: 2<br>DB_HOST: \\"staging-db.example.com\\"<br>PORT: 8080 | cluster-staging-us-east-1<br>cluster-staging-eu-west-1 | No |\\n| production | Live production environment | REPLICAS: 5<br>DB_HOST: \\"prod-db.example.com\\"<br>PORT: 80 | cluster-prod-us-east-1<br>cluster-prod-eu-west-1<br>cluster-prod-asia-south-1 | Yes |\\n\\n## 🛫 Pre-Flight Phase\\n\\n| Step | staging | production |\\n|------|---------|---------|\\n| ☐ Step 1: Build Docker Image 🛫⚙️<br>Build the application's Docker image | \`docker build -t web-server:latest .\` | \`docker build -t web-server:latest .\` |\\n\\n## ✈️ Flight Phase (Main Operations)\\n\\n| Step | staging | production |\\n|------|---------|---------|\\n| ☐ Step 2: Push Docker Image ✈️⚙️<br>Push the image to the container registry | \`docker push my-registry/web-server:latest\` | \`docker push my-registry/web-server:latest\` |\\n| ☐ Step 3: Deploy to Kubernetes ✈️⚙️<br>Deploy the application to Kubernetes | \`kubectl apply -f k8s/deployment.yaml\` | \`kubectl apply -f k8s/deployment.yaml\` |\\n| ☐ Step 4: Scale Deployment ✈️⚙️<br>Scale the Kubernetes deployment to the specified replica count | \`kubectl scale deployment web-server --replicas=2\` | \`kubectl scale deployment web-server --replicas=5\` |\\n\\n## 🛬 Post-Flight Phase\\n\\n| Step | staging | production |\\n|------|---------|---------|\\n| ☐ Step 5: Health Check 🛬👤<br>Manually verify deployment health<br>🎫 <em>Tickets: JIRA-123</em><br>👤 <em>PIC: john.doe</em><br>⏱️ <em>Timeline: 2024-01-15 10:00</em> | \`Check the application health endpoint at http://localhost:8080/health\` | \`Check the application health endpoint at http://localhost:80/health\` |\\n| ☐ Step 6: Verify Services 🛬👤<br>Verify all services are running correctly | \`curl https://web-server.example.com/health\` | \`curl https://web-server.example.com/health\` |\\n\\n## 🔄 Rollback Procedures\\n\\nIf deployment fails, execute the following rollback steps:\\n\\n### Rollback for: Deploy to Kubernetes\\n\\n| Environment | Rollback Action |\\n|-------------|----------------|\\n| staging | \`kubectl rollout undo deployment/web-server\` |\\n| production | \`kubectl rollout undo deployment/web-server\` |\\n\\n"
`;
